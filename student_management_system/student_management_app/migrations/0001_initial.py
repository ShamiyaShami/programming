# Generated by Django 4.0 on 2021-12-18 14:58

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MainUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userType', models.CharField(choices=[(1, 'Admin'), (2, 'Staff'), (3, 'Student')], default=1, max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceBook',
            fields=[
                ('attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('attend_date', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('course_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('gender', models.CharField(max_length=50)),
                ('address', models.TextField(max_length=255)),
                ('picture', models.FileField(upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.mainuser')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.courses')),
            ],
        ),
        migrations.CreateModel(
            name='TheStaff',
            fields=[
                ('staff_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('gender', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.mainuser')),
            ],
        ),
        migrations.CreateModel(
            name='TaughtCourses',
            fields=[
                ('subject_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.courses')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.thestaff')),
            ],
        ),
        migrations.CreateModel(
            name='StudentNotification',
            fields=[
                ('stud_not_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFeedback',
            fields=[
                ('stud_feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('stud_feedback', models.TextField()),
                ('Feedback_reply', models.TextField()),
                ('Created_date', models.DateTimeField(auto_now_add=True)),
                ('Updated_date', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='Student_Leave_Report',
            fields=[
                ('Leave_id', models.AutoField(primary_key=True, serialize=False)),
                ('Date_Of_Leave', models.CharField(max_length=255)),
                ('Reason_For_Leave', models.TextField()),
                ('Status_Of_Leave', models.BooleanField(default=False)),
                ('Created_Date', models.DateTimeField(auto_now_add=True)),
                ('Updated_Date', models.DateTimeField(auto_now_add=True)),
                ('Student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='StaffNotification',
            fields=[
                ('staf_not_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.thestaff')),
            ],
        ),
        migrations.CreateModel(
            name='StaffFeedback',
            fields=[
                ('staff_feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('staff_feedback', models.TextField()),
                ('Feedback_reply', models.TextField()),
                ('Created_date', models.DateTimeField(auto_now_add=True)),
                ('Updated_date', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.thestaff')),
            ],
        ),
        migrations.CreateModel(
            name='Staff_Leave_Report',
            fields=[
                ('Leave_id', models.AutoField(primary_key=True, serialize=False)),
                ('Date_Of_Leave', models.CharField(max_length=255)),
                ('Reason_For_Leave', models.TextField()),
                ('Status_Of_Leave', models.BooleanField(default=False)),
                ('Created_Date', models.DateTimeField(auto_now_add=True)),
                ('Updated_Date', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.thestaff')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceBookReport',
            fields=[
                ('attendancerprt_id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_status', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('attendance_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.attendancebook')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.student')),
            ],
        ),
        migrations.AddField(
            model_name='attendancebook',
            name='subject_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.taughtcourses'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('adm_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.mainuser')),
            ],
        ),
    ]
